<?xml version="1.0" encoding="UTF-8"?>
<configuration>

<!--    &lt;!&ndash;<property resource="application-log.properties"/>&ndash;&gt;-->
<!--    <contextName>urule-open-springboot</contextName>-->
<!--    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />-->
<!--    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />-->
<!--    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />-->

<!--    <springProperty name="LOG_LEVEL" source="info"/>-->

<!--    <property name="CONSOLE_LOG_PATTERN" value="${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(-&#45;&#45;){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>-->
<!--    <property name="FILE_LOG_PATTERN" value="${FILE_LOG_PATTERN:-%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } -&#45;&#45; [%t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>-->

<!--    &lt;!&ndash; 日志记录器，日期滚动记录 &ndash;&gt;-->
<!--    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        &lt;!&ndash; 正在记录的日志文件的路径及文件名 &ndash;&gt;-->
<!--        <file>${LOG_PATH}/hmsc-service.log</file>-->
<!--        &lt;!&ndash; 日志记录器的滚动策略，按日期，按大小记录 &ndash;&gt;-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
<!--            &lt;!&ndash; 归档的日志文件的路径，例如今天是2013-12-21日志，当前写的日志文件路径为file节点指定，可以将此文件与file指定文件路径设置为不同路径，从而将当前日志文件或归档日志文件置不同的目录。-->
<!--            而2013-12-21的日志文件在由fileNamePattern指定。%d{yyyy-MM-dd}指定日期格式，%i指定索引 &ndash;&gt;-->
<!--            <fileNamePattern>${LOG_PATH}/hmsc-service-%d{yyyy-MM-dd}.%i.log</fileNamePattern>-->
<!--            &lt;!&ndash; 除按日志记录之外，还配置了日志文件不能超过2M，若超过2M，日志文件会以索引0开始，-->
<!--            命名日志文件，例如log-error-2013-12-21.0.log &ndash;&gt;-->
<!--            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->
<!--                <maxFileSize>30MB</maxFileSize>-->
<!--            </timeBasedFileNamingAndTriggeringPolicy>-->
<!--        </rollingPolicy>-->
<!--        &lt;!&ndash; 追加方式记录日志 &ndash;&gt;-->
<!--        <append>true</append>-->
<!--        &lt;!&ndash; 日志文件的格式 &ndash;&gt;-->
<!--        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
<!--            <pattern>${FILE_LOG_PATTERN}</pattern>-->
<!--            <charset>utf-8</charset>-->
<!--        </encoder>-->
<!--    </appender>-->

<!--    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">-->
<!--        &lt;!&ndash;encoder 默认配置为PatternLayoutEncoder&ndash;&gt;-->
<!--        <encoder>-->
<!--            <pattern>${CONSOLE_LOG_PATTERN}</pattern>-->
<!--            <charset>utf-8</charset>-->
<!--        </encoder>-->
<!--    </appender>-->

<!--    &lt;!&ndash;<logger name="org.springframework" level="WARN" />&ndash;&gt;-->
<!--    &lt;!&ndash;<logger name="org.hibernate" level="WARN" />&ndash;&gt;-->

<!--    &lt;!&ndash; 生产环境下，将此级别配置为适合的级别，以免日志文件太多或影响程序性能 &ndash;&gt;-->
<!--    <root level="${LOG_LEVEL}">-->
<!--        <appender-ref ref="FILE"/>-->
<!--        &lt;!&ndash; 生产环境将请stdout,testfile去掉 &ndash;&gt;-->
<!--        <appender-ref ref="STDOUT"/>-->
<!--    </root>-->
    <property name="name" value="nacos"/>
    <property name="LOG_PATH" value="${LOG_PATH}"/>
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>
    <appender name="rollingFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/xiliu-chronic-service.${name}.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/xiliu-chronic-service.%d{yyyy-MM-dd}.log</fileNamePattern>
        </rollingPolicy>
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>
    <!-- project default level -->
    <logger name="com.bstek" level="info"/>
    <!-- 定义根日志级别 -->
    <root level="info">
        <appender-ref ref="rollingFile"/>
        <appender-ref ref="console"/>
    </root>
    <logger name="jdbc.sqlonly" level="ERROR"/>
    <logger name="jdbc.sqltiming" level="info"/>
    <logger name="jdbc.audit" level="ERROR"/>
    <logger name="jdbc.resultset" level="ERROR"/>
    <logger name="jdbc.resultsettable" level="ERROR"/>
</configuration>